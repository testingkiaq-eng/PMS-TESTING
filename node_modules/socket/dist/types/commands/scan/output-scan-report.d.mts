import type { ScanReport } from './generate-report.mts';
import type { CResult, OutputKind } from '../../types.mts';
import type { SocketArtifact } from '../../utils/alert/artifact.mts';
import type { SocketSdkSuccessResult } from '@socketsecurity/sdk';
export declare function outputScanReport(result: CResult<{
    scan: SocketArtifact[];
    securityPolicy: SocketSdkSuccessResult<'getOrgSecurityPolicy'>['data'];
}>, { filePath, fold, includeLicensePolicy, orgSlug, outputKind, reportLevel, scanId, short }: {
    orgSlug: string;
    scanId: string;
    includeLicensePolicy: boolean;
    outputKind: OutputKind;
    filePath: string;
    fold: 'pkg' | 'version' | 'file' | 'none';
    reportLevel: 'defer' | 'ignore' | 'monitor' | 'warn' | 'error';
    short: boolean;
}): Promise<void>;
export declare function toJsonReport(report: ScanReport, includeLicensePolicy?: boolean | undefined): string;
export declare function toMarkdownReport(report: ScanReport, includeLicensePolicy?: boolean | undefined): string;
//# sourceMappingURL=output-scan-report.d.mts.map