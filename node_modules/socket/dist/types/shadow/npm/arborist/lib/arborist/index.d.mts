import type { ArboristClass, NodeClass } from '../../types.mts';
export declare const SAFE_NO_SAVE_ARBORIST_REIFY_OPTIONS_OVERRIDES: {
    __proto__: null;
    audit: boolean;
    dryRun: boolean;
    fund: boolean;
    ignoreScripts: boolean;
    progress: boolean;
    save: boolean;
    saveBundle: boolean;
    silent: boolean;
};
export declare const SAFE_WITH_SAVE_ARBORIST_REIFY_OPTIONS_OVERRIDES: {
    __proto__: null;
    audit: boolean;
    fund: boolean;
    ignoreScripts: boolean;
    progress: boolean;
    saveBundle: boolean;
    silent: boolean;
    dryRun: boolean;
    save: boolean;
};
export declare const kCtorArgs: unique symbol;
export declare const kRiskyReify: unique symbol;
export declare const Arborist: ArboristClass;
// Implementation code not related to our custom behavior is based on
// https://github.com/npm/cli/blob/v11.0.0/workspaces/arborist/lib/arborist/index.js:
export declare class SafeArborist extends Arborist {
    constructor(...ctorArgs: ConstructorParameters<ArboristClass>);
    [kRiskyReify](...args: Parameters<InstanceType<ArboristClass>['reify']>): Promise<NodeClass>;
    // @ts-ignore Incorrectly typed.
    reify(this: SafeArborist, ...args: Parameters<InstanceType<ArboristClass>['reify']>): Promise<NodeClass>;
}
//# sourceMappingURL=index.d.mts.map